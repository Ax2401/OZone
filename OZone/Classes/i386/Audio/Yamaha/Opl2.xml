<?xml version="1.0" encoding="utf-8" ?>

<cls:class
	name="Opl2"
	type="http://metalx.org/Audio/Yamaha/Opl2"
	xmlns="http://metalx.org/Program"
	xmlns:cls="http://metalx.org/Class"
	xmlns:var="http://metalx.org/Variable"
	xmlns:clsf="http://metalx.org/i386/Functions/Class"
	xmlns:sys="http://metalx.org/i386/Functions/System"
	xmlns:cat="http://metalx.org/i386/Functions/Catalog"
	xmlns:obj="http://metalx.org/i386/Functions/Object"
	xmlns:mm="http://metalx.org/i386/Functions/MemoryManager"
	xmlns:bool="http://metalx.org/i386/Functions/Boolean"
	xmlns:str="http://metalx.org/i386/Functions/String"
	xmlns:lst="http://metalx.org/i386/Functions/List"
	xmlns:int="http://metalx.org/i386/Functions/Integer"
	xmlns:hex="http://metalx.org/i386/Functions/Hexadecimal"
	xmlns:con="http://metalx.org/i386/Functions/Console"
	xmlns:math="http://metalx.org/Intel/80386/Math"
	xmlns:ari="http://metalx.org/Intel/80386/Arithmetic"
	xmlns:shift="http://metalx.org/Intel/80386/Shift"
	xmlns:logic="http://metalx.org/Intel/80386/Logic"
	xmlns:imm="http://metalx.org/Intel/80386/Immediate"
	xmlns:cpu="http://metalx.org/Intel/80386/Operators"
	xmlns:op="http://metalx.org/Intel/80386/Operands"
	xmlns:index="http://metalx.org/Intel/80386/Index"
	xmlns:inc="http://metalx.org/Intel/80386/Increment"
	xmlns:ex="http://metalx.org/Intel/80386/ExtendedOperators"
	xmlns:gdt="http://metalx.org/Intel/80386/DescriptorTable"
	xmlns:pic="http://metalx.org/Pc/Pic/Ports"
	xmlns:cmd="http://metalx.org/Pc/Pic/Commands"
	xmlns:opl="http://metalx.org/Yamaha/Opl2/Registers">

	<cls:field name="Port" type="http://metalx.org/Hexadecimal" offset="0"/>

	<cls:method name="Create" type="http://metalx.org/Audio/Yamaha/Opl2" static="true">
		<mm:CheckOut length="4"/>

		<cpu:CopyImmediateToOperandFunction/>
		<imm:CopyImmediateToDIAddress/>
		<hex>00000388</hex>

		<obj:Create length="4"/>

		<cls:return/>
	</cls:method>

	<cls:method name="Play" type="http://metalx.org/Audio/Yamaha/Opl2">
		<cls:parameter name="reader" type="http://metalx.org/Audio/Midi/MidiReader"/>

		<cpu:PushDIToStack/>
		
		<cpu:MathImmediate8ToOperandFunction/>
		<math:SubtractFromSPRegister/>
		<hex>80</hex>

		<cpu:CopyRegisterToOperand/>
		<op:DI-SIRegister/>

		<obj:GetData/>

		<cpu:CopyOperandToRegister/>
		<op:DX-SIAddress/>
		
		<cpu:PushDXToStack/>
		
		<!--Setup OPL2-->
		<cpu:CallRelative/>
		<addressOf ref="reset" type="Relative32"/>
		
		<!--Find ReadMessage Method-->
		<cpu:CopyOperandToRegister/>
		<op:SI-BPAddressPlusImmediate8/>
		<byte>0</byte>
		
		<obj:GetType/>
		
		<cpu:CopyImmediateToDI/>
		<addressOf ref="readMessage" type="Absolute32"/>
		
		<clsf:FindMethod/>
		
		<clsf:GetMethodEntryPoint/>
		
		<cpu:PullDXFromStack/>
		
		<cpu:CopyRegisterToOperand/>
		<op:SI-IndexAddressPlusImmediate8/>
		<index:SP/>
		<hex>40</hex>
		
		<label id="forEachEvent"/>
		
		<!--Read Event-->
		<cpu:CopyOperandToRegister/>
		<op:DI-BPAddressPlusImmediate8/>
		<byte>0</byte>

		<cpu:CopyOperandToRegister/>
		<op:SI-IndexAddressPlusImmediate8/>
		<index:SP/>
		<hex>40</hex>
		
		<cpu:PushDXToStack/>
		
		<cpu:LogicFunction/>
		<logic:CallSIRegister/>
		
		<cpu:PullDXFromStack/>
				
		<cpu:CopyRegisterToOperand/>
		<op:DI-SIRegister/>
		
		<obj:GetData/>

		<cpu:CopyOperandToRegister/>
		<op:AX-SIAddressPlusImmediate8/>
		<byte>3</byte>

		<cpu:CompareAXToImmediate/>
		<int>0</int>

		<cpu:BranchToRelative8IfEqual/>
		<addressOf ref="handleEvent" type="Relative8"/>

		<label id="waitForDelay"/>
		
		<!--Wait For Delay-->
		<cpu:CopyImmediateToCX/>
		<!--<int>195000</int>-->
		<int>175000</int>

		<label id="delay"/>
			
		<cpu:NoOperation/>
		
		<cpu:LoopToRelative8/>
		<addressOf ref="delay" type="Relative8"/>

		<cpu:DecrementAX/>
		
		<cpu:BranchToRelative8IfNotZero/>
		<addressOf ref="waitForDelay" type="Relative8"/>

		<!--Handle Event-->
		<label id="handleEvent"/>
				
		<cpu:Operand16/>
		<cpu:CopyOperandToRegister/>
		<op:AX-SIAddress/>

		<cpu:Operand16/>
		<cpu:CompareAXToImmediate/>
		<hex>ff</hex>
		<hex>2f</hex>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notEnd" type="Relative8"/>

		<cpu:JumpToRelative/>
		<addressOf ref="exit" type="Relative32"/>

		<label id="notEnd"/>
				
		<cpu:CopyOperandToRegister8/>
		<op:AL-SIAddress/>

		<cpu:CompareALToImmediate/>
		<hex>ff</hex>
		
		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notMetadata" type="Relative8"/>
		
		<cpu:JumpToRelative/>
		<addressOf ref="forEachEvent" type="Relative32"/>
		
		<label id="notMetadata"/>
		
		<cpu:CompareALToImmediate/>
		<hex>f0</hex>
		
		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notSysEx" type="Relative8"/>
		
		<cpu:JumpToRelative/>
		<addressOf ref="forEachEvent" type="Relative32"/>
		
		<label id="notSysEx"/>
		
		<!--Get Channel-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-SIAddress/>		
		
		<cpu:AndALWithImmediate/>
		<hex>0f</hex>

		<cpu:CopyRegisterToOperand/>
		<op:AX-BXRegister/>

		<cpu:CompareALToImmediate/>
		<hex>09</hex>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notDrums" type="Relative8"/>

		<cpu:JumpToRelative/>
		<addressOf ref="forEachEvent" type="Relative32"/>
		
		<label id="notDrums"/>
		
		<!--Get Event-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-SIAddress/>		
		
		<cpu:ShiftRegisterByImmediateFunction8/>
		<shift:ShiftALRegisterRight/>
		<byte>4</byte>

		<cpu:CompareALToImmediate/>
		<hex>08</hex>

		<cpu:BranchToRelative8IfEqual/>
		<addressOf ref="noteOff" type="Relative8"/>
		
		<cpu:CompareALToImmediate/>
		<hex>09</hex>

		<cpu:BranchToRelative8IfEqual/>
		<addressOf ref="noteOn" type="Relative8"/>
		
		<cpu:JumpToRelative/>
		<addressOf ref="forEachEvent" type="Relative32"/>
		
		<label id="noteOn"/>
		
		<!--Get Velocity-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-SIAddressPlusImmediate8/>
		<byte>2</byte>

		<cpu:CompareALToImmediate/>
		<byte>0</byte>

		<cpu:BranchToRelative8IfEqual/>
		<addressOf ref="noteOff" type="Relative8"/>
		
		<cpu:ExclusiveOrALWithImmediate/>
		<hex>ff</hex>

		<cpu:ShiftRegisterByImmediateFunction8/>
		<shift:ShiftALRegisterRight/>
		<byte>2</byte>
		
		<cpu:OrALWithImmediate/>
		<binary>10000000</binary>
		
		<cpu:PushAXToStack/>
		
		<!--Find Inactive Voice-->
		<cpu:CopyImmediateToCX/>
		<int>9</int>

		<label id="forEachVoice"/>

		<cpu:CopyImmediateToAX/>
		<int>9</int>

		<cpu:SubtractRegisterFromOperand/>
		<op:CX-AXRegister/>

		<cpu:ShiftRegisterByImmediate8Function/>
		<shift:ShiftAXRegisterLeft/>
		<byte>4</byte>

		<cpu:AddImmediateToAX/>
		<addressOf ref="voices" type="Absolute32"/>

		<cpu:CopyRegisterToOperand/>
		<op:AX-DIRegister/>

		<cpu:CopyOperandToRegister8/>
		<op:AL-DIAddressPlusImmediate8/>
		<byte>15</byte>

		<cpu:CompareALToImmediate/>
		<byte>0</byte>

		<cpu:LoopToRelative8WhileNotEqual/>
		<addressOf ref="forEachVoice" type="Relative8"/>

		<cpu:BranchToRelative8IfEqual/>
		<addressOf ref="voiceFound" type="Relative8"/>
		
		<cpu:PullAXFromStack/>
		
		<cpu:JumpToRelative8/>
		<addressOf ref="nextEvent" type="Relative8"/>
		
		<label id="voiceFound"/>
		
		<!--Store Velocity-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-DIAddressPlusImmediate8/>
		<byte>4</byte>

		<!--<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>-->

		<cpu:PullAXFromStack/>
		
		<!--<cpu:WriteALToDXPort/>
		
		<cpu:DecrementDX/>-->

		<!--Store Note-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-SIAddressPlusImmediate8/>
		<byte>1</byte>

		<cpu:CopyRegisterToOperand8/>
		<op:AL-DIAddressPlusImmediate8/>
		<byte>15</byte>
		
		<!--Store Channel-->
		<cpu:CopyRegisterToOperand8/>
		<op:BL-DIAddressPlusImmediate8/>
		<byte>14</byte>

		<!--Get Frequency-->
		<cpu:AndAXWithImmediate/>
		<hex>000000ff</hex>

		<cpu:Operand16/>
		<cpu:CopyOperandToRegister/>
		<op:BX-IndexAddress/>
		<index:AXTimesTwoPlusImmediate32/>
		<addressOf ref="notes" type="Absolute32"/>

		<!--F-Number[0]: 0x41-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-DIAddressPlusImmediate8/>
		<byte>1</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyRegisterToOperand8/>
		<op:BL-ALRegister/>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>

		<!--KeyOn[0]: F-Number High: 2 Octave: 4 Key: On-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-DIAddressPlusImmediate8/>
		<byte>0</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyRegisterToOperand8/>
		<op:BH-ALRegister/>

		<cpu:OrALWithImmediate/>
		<binary>00100000</binary>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>
		
		
		
		
		
		<cpu:IncrementFunction8/>
		<inc:IncrementImmediateAddress/>
		<hex>000b8000</hex>

		
		
		
		
		<cpu:JumpToRelative/>
		<addressOf ref="nextEvent" type="Relative32"/>

		<label id="noteOff"/>

		<cpu:CopyImmediateToCX/>
		<int>9</int>

		<label id="noteOff_forEachVoice"/>

		<cpu:CopyImmediateToAX/>
		<int>9</int>

		<cpu:SubtractRegisterFromOperand/>
		<op:CX-AXRegister/>

		<cpu:ShiftRegisterByImmediate8Function/>
		<shift:ShiftAXRegisterLeft/>
		<byte>4</byte>

		<cpu:AddImmediateToAX/>
		<addressOf ref="voices" type="Absolute32"/>

		<cpu:CopyRegisterToOperand/>
		<op:AX-DIRegister/>

		<cpu:CopyOperandToRegister8/>
		<op:AL-DIAddressPlusImmediate8/>
		<byte>15</byte>

		<cpu:CompareRegisterToOperand8/>
		<op:AL-SIAddressPlusImmediate8/>
		<byte>1</byte>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notNote" type="Relative8"/>
		
		<cpu:CompareRegisterToOperand8/>
		<op:BL-DIAddressPlusImmediate8/>
		<byte>14</byte>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notNote" type="Relative8"/>

		<cpu:CopyOperandToRegister8/>
		<op:AL-DIAddressPlusImmediate8/>
		<byte>0</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyImmediateToAL/>
		<byte>0</byte>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>

		<!--Clear Channel-->
		<cpu:CopyImmediateToAL/>
		<byte>0</byte>

		<cpu:CopyRegisterToOperand8/>
		<op:AL-DIAddressPlusImmediate8/>
		<byte>15</byte>

		<label id="notNote"/>
		
		<cpu:LoopToRelative8/>
		<addressOf ref="noteOff_forEachVoice" type="Relative8"/>

		<!--Next Event-->
		<label id="nextEvent"/>

		<cpu:JumpToRelative/>
		<addressOf ref="forEachEvent" type="Relative32"/>

		<label id="exit"/>

		<cpu:CallRelative/>
		<addressOf ref="reset" type="Relative32"/>

		<cpu:MathImmediate8ToOperandFunction/>
		<math:AddToSPRegister/>
		<hex>80</hex>

		<cpu:PullDIFromStack/>

		<cpu:MathImmediate8ToOperandFunction/>
		<math:AddToBPRegister/>
		<byte>4</byte>

		<cpu:ReturnToNearCaller/>

		<var:string id="readMessage">ReadMessage</var:string>
	</cls:method>

	<cls:method name="ToString" type="http://metalx.org/String">
		<cpu:CopyImmediateToDI/>
		<addressOf ref="deviceName" type="Absolute32"/>

		<str:CreateObject/>

		<cpu:ReturnToNearCaller/>

		<var:string id="deviceName">Yamaha OPL2 Synthesizer</var:string>
	</cls:method>

	<cls:method name="GetClass" type="http://metalx.org/Class">
		<cpu:CopyRegisterToOperand/>
		<op:DI-SIRegister/>

		<obj:GetType/>

		<cpu:CopyRegisterToOperand/>
		<op:SI-DIRegister/>

		<clsf:CreateObject/>

		<cpu:ReturnToNearCaller/>
	</cls:method>

	<cls:method name="GetClass" type="http://metalx.org/Class" static="true">
		<cpu:CopyRegisterToOperand/>
		<op:BX-DIRegister/>

		<clsf:CreateObject/>

		<cpu:ReturnToNearCaller/>
	</cls:method>

	<label id="reset">
		<cpu:CopyImmediateToCX/>
		<int>9</int>

		<label id="nextChannel"/>

		<cpu:CopyRegisterToOperand/>
		<op:CX-AXRegister/>

		<cpu:DecrementAX/>

		<cpu:CallRelative/>
		<addressOf ref="resetChannel" type="Relative32"/>

		<cpu:LoopToRelative8/>
		<addressOf ref="nextChannel" type="Relative8"/>

		<cpu:ReturnToNearCaller/>
	</label>

	<label id="resetChannel">
		<cpu:ShiftRegisterByImmediate8Function/>
		<shift:ShiftAXRegisterLeft/>
		<byte>4</byte>

		<cpu:AddImmediateToAX/>
		<addressOf ref="voices" type="Absolute32"/>

		<cpu:CopyRegisterToOperand/>
		<op:AX-BXRegister/>

		<!--Feedback: None, Stereo, Additive-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-BXAddressPlusImmediate8/>
		<byte>2</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyImmediateToAL/>
		<binary>00110001</binary>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>

		<!--Modulation[0]: Normal Sustain-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-BXAddressPlusImmediate8/>
		<byte>11</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyImmediateToAL/>
		<binary>00100001</binary>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>

		<!--Modulation[1]: Normal Sustain-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-BXAddressPlusImmediate8/>
		<byte>12</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyImmediateToAL/>
		<binary>00100001</binary>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>

		<!--Output[0]: 0dB Attenuation-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-BXAddressPlusImmediate8/>
		<byte>3</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyImmediateToAL/>
		<binary>10110000</binary>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>

		<!--Output[1]: 0dB Attenuation, Medium Key Scale Level-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-BXAddressPlusImmediate8/>
		<byte>4</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyImmediateToAL/>
		<binary>10110000</binary>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>

		<!--AttackDecay[0]: 0xe0-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-BXAddressPlusImmediate8/>
		<byte>5</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyImmediateToAL/>
		<hex>80</hex>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>

		<!--AttackDecay[1]: 0xe0-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-BXAddressPlusImmediate8/>
		<byte>6</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyImmediateToAL/>
		<hex>80</hex>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>

		<!--SustainRelease[0]: 0x0e-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-BXAddressPlusImmediate8/>
		<byte>7</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyImmediateToAL/>
		<hex>08</hex>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>

		<!--SustainRelease[1]: 0x0e-->
		<cpu:CopyOperandToRegister8/>
		<op:AL-BXAddressPlusImmediate8/>
		<byte>8</byte>

		<cpu:WriteALToDXPort/>

		<cpu:IncrementDX/>

		<cpu:CopyImmediateToAL/>
		<hex>08</hex>

		<cpu:WriteALToDXPort/>

		<cpu:DecrementDX/>

		<cpu:ReturnToNearCaller/>
	</label>

	<label id="voices">
		<opl:Channel1KeyOn/>
		<opl:Channel1Frequency/>
		<opl:Channel1Feedback/>
		<opl:Channel1Output1/>
		<opl:Channel1Output2/>
		<opl:Channel1AttackDecay1/>
		<opl:Channel1AttackDecay2/>
		<opl:Channel1SustainRelease1/>
		<opl:Channel1SustainRelease2/>
		<opl:Channel1Waveform1/>
		<opl:Channel1Waveform2/>
		<opl:Channel1Modulation1/>
		<opl:Channel1Modulation2/>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<opl:Channel2KeyOn/>
		<opl:Channel2Frequency/>
		<opl:Channel2Feedback/>
		<opl:Channel2Output1/>
		<opl:Channel2Output2/>
		<opl:Channel2AttackDecay1/>
		<opl:Channel2AttackDecay2/>
		<opl:Channel2SustainRelease1/>
		<opl:Channel2SustainRelease2/>
		<opl:Channel2Waveform1/>
		<opl:Channel2Waveform2/>
		<opl:Channel2Modulation1/>
		<opl:Channel2Modulation2/>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<opl:Channel3KeyOn/>
		<opl:Channel3Frequency/>
		<opl:Channel3Feedback/>
		<opl:Channel3Output1/>
		<opl:Channel3Output2/>
		<opl:Channel3AttackDecay1/>
		<opl:Channel3AttackDecay2/>
		<opl:Channel3SustainRelease1/>
		<opl:Channel3SustainRelease2/>
		<opl:Channel3Waveform1/>
		<opl:Channel3Waveform2/>
		<opl:Channel3Modulation1/>
		<opl:Channel3Modulation2/>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<opl:Channel4KeyOn/>
		<opl:Channel4Frequency/>
		<opl:Channel4Feedback/>
		<opl:Channel4Output1/>
		<opl:Channel4Output2/>
		<opl:Channel4AttackDecay1/>
		<opl:Channel4AttackDecay2/>
		<opl:Channel4SustainRelease1/>
		<opl:Channel4SustainRelease2/>
		<opl:Channel4Waveform1/>
		<opl:Channel4Waveform2/>
		<opl:Channel4Modulation1/>
		<opl:Channel4Modulation2/>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<opl:Channel5KeyOn/>
		<opl:Channel5Frequency/>
		<opl:Channel5Feedback/>
		<opl:Channel5Output1/>
		<opl:Channel5Output2/>
		<opl:Channel5AttackDecay1/>
		<opl:Channel5AttackDecay2/>
		<opl:Channel5SustainRelease1/>
		<opl:Channel5SustainRelease2/>
		<opl:Channel5Waveform1/>
		<opl:Channel5Waveform2/>
		<opl:Channel5Modulation1/>
		<opl:Channel5Modulation2/>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<opl:Channel6KeyOn/>
		<opl:Channel6Frequency/>
		<opl:Channel6Feedback/>
		<opl:Channel6Output1/>
		<opl:Channel6Output2/>
		<opl:Channel6AttackDecay1/>
		<opl:Channel6AttackDecay2/>
		<opl:Channel6SustainRelease1/>
		<opl:Channel6SustainRelease2/>
		<opl:Channel6Waveform1/>
		<opl:Channel6Waveform2/>
		<opl:Channel6Modulation1/>
		<opl:Channel6Modulation2/>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<opl:Channel7KeyOn/>
		<opl:Channel7Frequency/>
		<opl:Channel7Feedback/>
		<opl:Channel7Output1/>
		<opl:Channel7Output2/>
		<opl:Channel7AttackDecay1/>
		<opl:Channel7AttackDecay2/>
		<opl:Channel7SustainRelease1/>
		<opl:Channel7SustainRelease2/>
		<opl:Channel7Waveform1/>
		<opl:Channel7Waveform2/>
		<opl:Channel7Modulation1/>
		<opl:Channel7Modulation2/>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<opl:Channel8KeyOn/>
		<opl:Channel8Frequency/>
		<opl:Channel8Feedback/>
		<opl:Channel8Output1/>
		<opl:Channel8Output2/>
		<opl:Channel8AttackDecay1/>
		<opl:Channel8AttackDecay2/>
		<opl:Channel8SustainRelease1/>
		<opl:Channel8SustainRelease2/>
		<opl:Channel8Waveform1/>
		<opl:Channel8Waveform2/>
		<opl:Channel8Modulation1/>
		<opl:Channel8Modulation2/>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<opl:Channel9KeyOn/>
		<opl:Channel9Frequency/>
		<opl:Channel9Feedback/>
		<opl:Channel9Output1/>
		<opl:Channel9Output2/>
		<opl:Channel9AttackDecay1/>
		<opl:Channel9AttackDecay2/>
		<opl:Channel9SustainRelease1/>
		<opl:Channel9SustainRelease2/>
		<opl:Channel9Waveform1/>
		<opl:Channel9Waveform2/>
		<opl:Channel9Modulation1/>
		<opl:Channel9Modulation2/>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
	</label>
	
	<label id="drumChannel">
		<binary>00100000</binary>
	</label>

	<label id="notes">
		<!--<hex>ab</hex>
		<hex>00</hex>

		<hex>b5</hex>
		<hex>00</hex>

		<hex>c0</hex>
		<hex>00</hex>

		<hex>cc</hex>
		<hex>00</hex>

		<hex>d8</hex>
		<hex>00</hex>

		<hex>e5</hex>
		<hex>00</hex>

		<hex>f2</hex>
		<hex>00</hex>

		<hex>01</hex>
		<hex>01</hex>

		<hex>10</hex>
		<hex>01</hex>

		<hex>20</hex>
		<hex>01</hex>

		<hex>31</hex>
		<hex>01</hex>

		<hex>43</hex>
		<hex>01</hex>-->


		<hex>57</hex>
		<hex>01</hex>

		<hex>6b</hex>
		<hex>01</hex>

		<hex>81</hex>
		<hex>01</hex>

		<hex>98</hex>
		<hex>01</hex>

		<hex>b0</hex>
		<hex>01</hex>

		<hex>ca</hex>
		<hex>01</hex>

		<hex>e5</hex>
		<hex>01</hex>

		<hex>02</hex>
		<hex>02</hex>

		<hex>20</hex>
		<hex>02</hex>

		<hex>41</hex>
		<hex>02</hex>

		<hex>63</hex>
		<hex>02</hex>

		<hex>87</hex>
		<hex>02</hex>


		<hex>ae</hex>
		<hex>02</hex>

		<hex>6b</hex>
		<hex>05</hex>

		<hex>81</hex>
		<hex>05</hex>

		<hex>98</hex>
		<hex>05</hex>

		<hex>b0</hex>
		<hex>05</hex>

		<hex>ca</hex>
		<hex>05</hex>

		<hex>e5</hex>
		<hex>05</hex>

		<hex>02</hex>
		<hex>06</hex>

		<hex>20</hex>
		<hex>06</hex>

		<hex>41</hex>
		<hex>06</hex>

		<hex>63</hex>
		<hex>06</hex>

		<hex>87</hex>
		<hex>06</hex>


		<hex>ae</hex>
		<hex>06</hex>

		<hex>6b</hex>
		<hex>09</hex>

		<hex>81</hex>
		<hex>09</hex>

		<hex>98</hex>
		<hex>09</hex>

		<hex>b0</hex>
		<hex>09</hex>

		<hex>ca</hex>
		<hex>09</hex>

		<hex>e5</hex>
		<hex>09</hex>

		<hex>02</hex>
		<hex>0a</hex>

		<hex>20</hex>
		<hex>0a</hex>

		<hex>41</hex>
		<hex>0a</hex>

		<hex>63</hex>
		<hex>0a</hex>

		<hex>87</hex>
		<hex>0a</hex>


		<hex>ae</hex>
		<hex>0a</hex>

		<hex>6b</hex>
		<hex>0d</hex>

		<hex>81</hex>
		<hex>0d</hex>

		<hex>98</hex>
		<hex>0d</hex>

		<hex>b0</hex>
		<hex>0d</hex>

		<hex>ca</hex>
		<hex>0d</hex>

		<hex>e5</hex>
		<hex>0d</hex>

		<hex>02</hex>
		<hex>0e</hex>

		<hex>20</hex>
		<hex>0e</hex>

		<hex>41</hex>
		<hex>0e</hex>

		<hex>63</hex>
		<hex>0e</hex>

		<hex>87</hex>
		<hex>0e</hex>


		<hex>ae</hex>
		<hex>0e</hex>

		<hex>6b</hex>
		<hex>11</hex>

		<hex>81</hex>
		<hex>11</hex>

		<hex>98</hex>
		<hex>11</hex>

		<hex>b0</hex>
		<hex>11</hex>

		<hex>ca</hex>
		<hex>11</hex>

		<hex>e5</hex>
		<hex>11</hex>

		<hex>02</hex>
		<hex>12</hex>

		<hex>20</hex>
		<hex>12</hex>

		<hex>41</hex>
		<hex>12</hex>

		<hex>63</hex>
		<hex>12</hex>

		<hex>87</hex>
		<hex>12</hex>


		<hex>ae</hex>
		<hex>12</hex>

		<hex>6b</hex>
		<hex>15</hex>

		<hex>81</hex>
		<hex>15</hex>

		<hex>98</hex>
		<hex>15</hex>

		<hex>b0</hex>
		<hex>15</hex>

		<hex>ca</hex>
		<hex>15</hex>

		<hex>e5</hex>
		<hex>15</hex>

		<hex>02</hex>
		<hex>16</hex>

		<hex>20</hex>
		<hex>16</hex>

		<hex>41</hex>
		<hex>16</hex>

		<hex>63</hex>
		<hex>16</hex>

		<hex>87</hex>
		<hex>16</hex>


		<hex>ae</hex>
		<hex>16</hex>

		<hex>6b</hex>
		<hex>19</hex>

		<hex>81</hex>
		<hex>19</hex>

		<hex>98</hex>
		<hex>19</hex>

		<hex>b0</hex>
		<hex>19</hex>

		<hex>ca</hex>
		<hex>19</hex>

		<hex>e5</hex>
		<hex>19</hex>

		<hex>02</hex>
		<hex>1a</hex>

		<hex>20</hex>
		<hex>1a</hex>

		<hex>41</hex>
		<hex>1a</hex>

		<hex>63</hex>
		<hex>1a</hex>

		<hex>87</hex>
		<hex>1a</hex>


		<hex>ae</hex>
		<hex>1a</hex>

		<hex>6b</hex>
		<hex>1d</hex>

		<hex>81</hex>
		<hex>1d</hex>

		<hex>98</hex>
		<hex>1d</hex>

		<hex>b0</hex>
		<hex>1d</hex>

		<hex>ca</hex>
		<hex>1d</hex>

		<hex>e5</hex>
		<hex>1d</hex>

		<hex>02</hex>
		<hex>1e</hex>

		<hex>20</hex>
		<hex>1e</hex>

		<hex>41</hex>
		<hex>1e</hex>

		<hex>63</hex>
		<hex>1e</hex>

		<hex>87</hex>
		<hex>1e</hex>


		<hex>ae</hex>
		<hex>1e</hex>

		<!--<hex>6b</hex>
		<hex>19</hex>

		<hex>81</hex>
		<hex>19</hex>

		<hex>98</hex>
		<hex>19</hex>

		<hex>b0</hex>
		<hex>19</hex>

		<hex>ca</hex>
		<hex>19</hex>

		<hex>e5</hex>
		<hex>19</hex>

		<hex>02</hex>
		<hex>1a</hex>

		<hex>20</hex>
		<hex>1a</hex>

		<hex>41</hex>
		<hex>1a</hex>

		<hex>63</hex>
		<hex>1a</hex>

		<hex>87</hex>
		<hex>1a</hex>-->
	</label>

	<label id="drums">
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>

		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>

		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>
		<binary>00010000</binary>

		<binary>00010000</binary>
		<binary>00001000</binary>
		<binary>00001000</binary>
		<binary>00001000</binary>
		<binary>00001000</binary>
		<binary>00000100</binary>
		<binary>00000001</binary>
		<binary>00000100</binary>
		<binary>00000001</binary>
		<binary>00000100</binary>
		<binary>00000001</binary>
		<binary>00000100</binary>

		<binary>00000100</binary>
		<binary>00000010</binary>
		<binary>00000100</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>

		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>

		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>

		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>

		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>

		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
		<binary>00000010</binary>
	</label>
</cls:class>
typedef enum _D3DSHADER_INSTRUCTION_OPCODE_TYPE 
{ 
    NOP          = 0, 
    MOV          , 
    ADD          , 
    SUB          , 
    MAD          , 
    MUL          , 
    RCP          , 
    RSQ          , 
    DP3          , 
    DP4          , 
    MIN          , 
    MAX          , 
    SLT          , 
    SGE          , 
    EXP          , 
    LOG          , 
    LIT          , 
    DST          , 
    LRP          , 
    FRC          , 
    M4x4         , 
    M4x3         , 
    M3x4         , 
    M3x3         , 
    M3x2         , 
    CALL         , 
    CALLNZ       , 
    LOOP         , 
    RET          , 
    ENDLOOP      , 
    LABEL        , 
    DCL          , 
    POW          , 
    CRS          , 
    SGN          , 
    ABS          , 
    NRM          , 
    SINCOS       , 
    REP          , 
    ENDREP       , 
    IF           , 
    IFC          , 
    ELSE         , 
    ENDIF        , 
    BREAK        , 
    BREAKC       , 
    MOVA         , 
    DEFB         , 
    DEFI         , 


    TEXCOORD     = 64, 
    TEXKILL      , 
    TEX          , 
    TEXBEM       , 
    TEXBEML      , 
    TEXREG2AR    , 
    TEXREG2GB    , 
    TEXM3x2PAD   , 
    TEXM3x2TEX   , 
    TEXM3x3PAD   , 
    TEXM3x3TEX   , 
    RESERVED0    , 
    TEXM3x3SPEC  , 
    TEXM3x3VSPEC , 
    EXPP         , 
    LOGP         , 
    CND          , 
    DEF          , 
    TEXREG2RGB   , 
    TEXDP3TEX    , 
    TEXM3x2DEPTH , 
    TEXDP3       , 
    TEXM3x3      , 
    TEXDEPTH     , 
    CMP          , 
    BEM          , 
    DP2ADD       , 
    DSX          , 
    DSY          , 
    TEXLDD       , 
    SETP         , 
    TEXLDL       , 
    BREAKP       , 


    PHASE        = 0xFFFD, 
    COMMENT      = 0xFFFE, 
    END          = 0xFFFF, 


    FORCE_DWORD  = 0x7fffffff,   // force 32-bit size enum 
} D3DSHADER_INSTRUCTION_OPCODE_TYPE; 


typedef enum _D3DSHADER_PARAM_REGISTER_TYPE 
{ 
    TEMP           =  0, // Temporary Register File 
    INPUT          =  1, // Input Register File 
    CONST          =  2, // Constant Register File 
    ADDR           =  3, // Address Register (VS) 
    TEXTURE        =  3, // Texture Register File (PS) 
    RASTOUT        =  4, // Rasterizer Register File 
    ATTROUT        =  5, // Attribute Output Register File 
    TEXCRDOUT      =  6, // Texture Coordinate Output Register File 
    OUTPUT         =  6, // Output register file for VS3.0+ 
    CONSTINT       =  7, // Constant Integer Vector Register File 
    COLOROUT       =  8, // Color Output Register File 
    DEPTHOUT       =  9, // Depth Output Register File 
    SAMPLER        = 10, // Sampler State Register File 
    CONST2         = 11, // Constant Register File  2048 - 4095 
    CONST3         = 12, // Constant Register File  4096 - 6143 
    CONST4         = 13, // Constant Register File  6144 - 8191 
    CONSTBOOL      = 14, // Constant Boolean register file 
    LOOP           = 15, // Loop counter register file 
    TEMPFLOAT16    = 16, // 16-bit float temp register file 
    MISCTYPE       = 17, // Miscellaneous (single) registers. 
    LABEL          = 18, // Label 
    PREDICATE      = 19, // Predicate register 
    FORCE_DWORD  = 0x7fffffff,         // force 32-bit size enum 
} D3DSHADER_PARAM_REGISTER_TYPE; 


<?xml version="1.0" encoding="utf-8"?>
<xsd:schema targetNamespace="http://metalx.org/Microsoft/Clr" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:element name="AddValues">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddSignedIntegerValuesAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddUnsignedIntegerValuesAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AndIntegerValues">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArgumentListHandle">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfEqual32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfEqual8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfGreaterThanOrEqualTo32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfGreaterThanOrEqualTo8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfGreaterThanOrEqualToUnsigned32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfGreaterThanOrEqualToUnsigned8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfGreaterThan32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfGreaterThan8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfGreaterThanUnsigned32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfGreaterThanUnsigned8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfLessThanOrEqualTo32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfLessThanOrEqualTo8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfLessThanOrEqualToUnsigned32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfLessThanOrEqualToUnsigned8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfLessThan32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfLessThan8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfLessThanUnsigned32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfLessThanUnsigned8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfNotEqual32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfNotEqual8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BoxValue">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="JumpTo32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="JumpTo8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Break">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfFalse32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfFalse8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfNotNull32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfNotNull8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfNull32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfNull8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfTrue32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfTrue8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfZero32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchIfZero8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CallMethod">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CallSite">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CallObjectMethod">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CastObject">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushEqual">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushGreaterThan">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushGreaterThanUnsigned">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CheckFiniteNumber">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushLessThan">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushLessThanUnordered">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CallVirtualMethodForType">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToNativeInteger">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToByte">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToShort">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToInteger">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToLong">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToNativeIntegerAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertUnsignedToNativeIntegerAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToByteAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertUnsignedToByteAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToShortAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertUnsignedToShortAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToIntegerAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertUnsignedToIntegerAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToLongAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertUnsignedToLongAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToNativeUnsignedIntegerAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertUnsignedToNativeUnsignedIntegerAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToUnsignedByteAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertUnsignedToUnsignedByteAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToUnsignedShortAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertUnsignedToUnsignedShortAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToUnsignedIntegerAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertUnsignedToUnsignedIntegerAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToUnsignedLongAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertUnsignedToUnsignedLongAndCheckOverflow">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertUnsignedToFloat">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToFloat">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToDouble">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToNativeUnsignedInteger">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToUnsignedByte">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToUnsignedShort">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToUnsignedInteger">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ConvertToUnsignedLong">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyMemory">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyValue">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="DivideValues">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="DivideUnsignedValues">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="DuplicateValue">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="EndFault">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="EndFilter">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="EndFinally">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushLongValue">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetMemory">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="InitializeMemory">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetObjectAsType">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="JumpToMethod">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushArgumentToStack16">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushArgument0ToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushArgument1ToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushArgument2ToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushArgument3ToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushArgumentToStack8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArgumentAddress16">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArgumentAddress8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushIntegerValueToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushZeroToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushOneToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushTwoToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushThreeToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushFourToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushFiveToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushSixToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushSevenToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushEightToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushNegativeOneToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushIntegerNegativeOneToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushByteValueToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushLongValueToStack64">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushFloatValueToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushDoubleValueToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayItem">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayNativeInteger">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayByte">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayShort">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayInteger">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayLong">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayFloat">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayDouble">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayObject">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayUnsignedByte">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayUnsignedShort">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayUnsignedInteger">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayUnsignedLong">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayItemAddress">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushFieldValueToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushFieldAddressToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushMethodPointerToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushNativeIntegerToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushByteToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushShortToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushIntegerToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushLongToStack64">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushFloatToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushDoubleToStack64">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushObjectToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushUnsignedByteToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushUnsignedShortToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushUnsignedIntegerToStack32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetArrayLength">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushVariableToStack16">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushVariable0ToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushVariable1ToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushVariable2ToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushVariable3ToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushVariableToStack8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushVariableAddressToStack16">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushVariableAddressToStack8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushNullToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushMemoryValueToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushFieldValueToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushFieldAddressToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushStringToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetRuntimeMetadata">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushVirtualAddressToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="LeaveProtectedCode32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="LeaveProtectedCode8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AllocateLocalMemory">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushTypedReference">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="MultiplyValues">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="MultiplySignedIntegerValues">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="MultiplyUnsignedIntegerValues">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="NegateValue">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CreateArray">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CreateObject">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SkipCheck">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="NoOperation">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="NotValues">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OrValues32">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullValueFromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReadOnly">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushTypeIDToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushAddressToStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="DivideValuesAndGetRemainder">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="DivideUnsignedValuesAndGetRemainder">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Return">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="RethrowException">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ShiftIntegerLeft">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ShiftIntegerRight">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ShiftUnsignedIntegerRight">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="GetTypeSize">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullArgumentFromStack16">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullArgumentFromStack8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullArrayItemFromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullArrayNativeIntegerFromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullArrayByteFromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullArrayShortFromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullArrayIntegerFromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullArrayLongFromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullArrayFloatFromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullArrayDoubleFromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullArrayReferenceFromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetFieldValue">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetNativeIntegerAtAddress">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetByteAtAddress">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetShortAtAddress">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetIntegerAtAddress">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetLongAtAddress">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetFloatAtAddress">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetDoubleAtAddress">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetReferenceAtAddress">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullVariableFromStack16">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullVariable0FromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullVariable1FromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullVariable2FromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullVariable3FromStack">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullVariableFromStack8">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetTypeAtAddress">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetFieldValue">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractValues">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractNativeIntegers">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractUnsignedNativeIntegers">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Switch">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="EndMethod">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ThrowException">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Unaligned">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Unbox">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="UnboxAny">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Volatile">
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExclusiveOrValues">
		<xsd:complexType />
	</xsd:element>
</xsd:schema>